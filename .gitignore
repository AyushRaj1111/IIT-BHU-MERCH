###############################################
# Project-specific .gitignore (Django / Python)
# Keep this lean: only what's actually produced
# locally and should never be committed.
###############################################

# Python bytecode / cache
__pycache__/
*.py[cod]
*$py.class

# Virtual environments (only local ones)
env/
venv/
.venv/
ENV/
env.bak/
venv.bak/

# Environment & secret files
.env
.env.*
!.env.example  # keep the template env file tracked
*.pem
*.key
local_settings.py

# SQLite DB (not needed in VCS; migrations track schema)
db.sqlite3
db.sqlite3-* 

# Django runtime logs
*.log

# Collected static files (use collectstatic in deploy)
staticfiles/

# Test / coverage artifacts (if tests are added later)
.pytest_cache/
.coverage*
coverage.xml

# Tool caches (only those likely to appear)
.mypy_cache/
.cache/

# Jupyter (if someone experiments locally)
.ipynb_checkpoints/

# Editors / IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS (Windows / macOS)
Thumbs.db
ehthumbs.db
.DS_Store

# Optional: uncomment to ignore all media uploads generated locally.
# Keep committed product images by placing them under a tracked folder.
#media/

# End of custom .gitignore
